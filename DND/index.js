$(document).ready(function () {

    
//#region map
    var map

//#endregion

    window.defaultWidth = window.innerWidth;
    window.onresize = function () {

        let x = (window.defaultWidth / window.innerWidth).toFixed(2);

        for (let i of document.getElementsByClassName("lamp2")){
            i.style.transform = "scale(" + 1 / x + ")";                
        }   

        for (let i in lamps){
            lamps[i][0].css({left: (lamps[i][2] * size + deltaX) / x, top: (lamps[i][3] * size + deltaY) / x});
            lamps[i][1].css({left: (lamps[i][2] * size + deltaX) / x, top: (lamps[i][3] * size + deltaY) / x});

            lamps[i][0].height(250 / x);
            lamps[i][0].width(250 / x);

            lamps[i][0].css({marginTop: -125 / x, marginLeft: -125 / x});
        }
       
        document.getElementById("hero").style.transform = "scale(" + 1 / x + ")";
        document.getElementById("hero").style.left = (heroX * size + deltaX) / x + "px";
        document.getElementById("hero").style.top = (heroY * size + deltaY) / x + "px";
        

        document.getElementById("icon-button-interface").style.transform = "scale(" + 1 / x + ")";

        
        $("#circle").height(250 / x);
        $("#circle").width(250 / x);
        $("#circle").css({left: (heroX * size + deltaX) / x, top: (heroY * size + deltaY) / x});        
        $("#circle").css({marginTop: -125 / x, marginLeft: -125 / x});

        $("#circle2").css({left: (heroX * size + deltaX) / x, top: (heroY * size + deltaY) / x});
    }    

    function interfaceMoveOut() {
        let interfase = $("#interface"),
            flag = interfase.css("display") == "none" ? false : true;
        if (flag) {
            interfase.hide(1000);
            $("#button-interface").animate({
                left: "6%",
                top: "2%"
            })
        } else {
            interfase.show("slow");
            interfase.css("display", "flex");
            $("#button-interface").animate({
                left: "1.5%",
                top: "1.5%"
            });
        }
    }

    function interfaceMoveOut2() {
        let interfase = $("#interface2"),
            flag = interfase.css("display") == "none" ? false : true;
        if (flag) {
            interfase.hide(1000);
            $("#button-interface2").animate({
                right: "6%",
                top: "2%"
            })
        } else {
            interfase.show("slow");
            interfase.css("display", "flex");
            $("#button-interface2").animate({
                right: "0%",
                top: "1.5%"
            });
        }
    }

    function closeWindow(){
        PENDING = false;
        // what = "info";
        // // console.log($("#content-explanation-info"));
        // if ($("#content-explanation-info").text() == "")
        //     what = "input";        

        if (whatnow == "info"){
            $("#pop-container-info").hide(750);
            $("#content-explanation-info").html("");
            $("#content-actions-info").html("");
        }
        else if (whatnow == "input"){
            $("#pop-container-input").hide(750);
            $("#content-explanation-input").html("");
            $("#content-actions-input").html("");
        }
        else {
            $("#pop-container-get").hide(750);
            $("#content-explanation-get").html("");
            $("#content-actions-get").html("");
        }
        whatnow = "";
    }

    function eventInfo(options){
        whatnow = "info";

        PENDING = true;
        let content = $("#content-explanation-info"),
            actions = $("#content-actions-info");

        if ("main" in options && "head" in options["main"] && "main" in options["main"]) {
            let P = document.createElement("P");
            P.textContent = options["main"]["head"];
            content.append(P);
            P = document.createElement("P");
            P.textContent = options["main"]["main"];
            content.append(P);

        }
        if ("buttons" in options) {
            for (let elem of options["buttons"]) {
                let button = document.createElement("button");
                button.textContent = elem["text"];
                button.className = "interface-button-action";
                button.onclick = elem["func"];
                actions.append(button);
            }
        }
        $("#pop-container-info").show(750);
    }

    function eventGet(options){
        whatnow = "get";

        PENDING = true;

        let content = $("#content-explanation-get"),
            actions = $("#content-actions-get");

        
        let P = document.createElement("P");
        P.textContent = options["main"]["head"];
        content.append(P);
        P = document.createElement("P");
        P.textContent = options["main"]["main"];
        content.append(P);

        let text = document.createElement("input");
        text.type = "text";
        text.id = "text_get";
        text.className = "textblock";
        text.placeholder = "Хочешь яблочко - сруби яблоню.";
        actions.append(text);

        let button = document.createElement("button");
        button.textContent = options["buttons"][0]["text"];
        button.className = "interface-button-action";
        button.onclick = options["buttons"][0]["func"];
        button.id = "button_get"
        actions.append(button);

        $("#pop-container-get").show(750);
    }

    function eventInput(options){
        whatnow = "input";

        PENDING = true;
        let content = $("#content-explanation-input"),
            actions = $("#content-actions-input");
        
        let P = document.createElement("P");
        P.id = "maintext";
        P.textContent = options["main"]["head"];
        content.append(P);
        
        content.append(document.createElement("hr"));
        P = document.createElement("P");
        P.textContent = "(введи последовательность комнат от начала до сюда и убежишь)";
        content.append(P);
        content.append(document.createElement("hr"));

        P = document.createElement("P");
        P.textContent = options["main"]["main"];
        content.append(P);
        
        let text = document.createElement("input");
        text.type = "text";
        text.id = "text";
        text.className = "textblock";
        text.placeholder = "Вводи скорей ответ, дурень!";
        actions.append(text);

        let button = document.createElement("button");
        button.textContent = options["buttons"][0]["text"];
        button.className = "interface-button-action";
        button.onclick = options["buttons"][0]["func"];        
        actions.append(button);

        actions.append(document.createElement("hr"));

        text = document.createElement("input");
        text.type = "text";
        text.id = "text2";
        text.className = "textblock";
        text.placeholder = "...через пробел...";
        actions.append(text);

        button = document.createElement("button");
        button.textContent = options["buttons"][1]["text"];
        button.className = "interface-button-action";
        button.onclick = options["buttons"][1]["func"];
        button.id = "GO";
        actions.append(button);


        $("#pop-container-input").show(750);
    }

    function move(code){
        let xx = heroX;
        let yy = heroY;

        if (code == '38') {
            if ($("#hero").position().top >= 0 && map[heroY - 1][heroX] != -1) {
                heroY -= 1;
                $(".hero").css("background", "url('source/" + "back.png" + "') no-repeat");
            }
        } else if (code == '40') {
            if ($("#hero").position().top <= $(window).height() && map[heroY + 1][heroX] != -1) {
                heroY += 1;
                $(".hero").css("background", "url('source/" + "front.png" + "') no-repeat");
            }
        } else if (code == '37') {
            if ($("#hero").position().left - size / 2 >= 0 && map[heroY][heroX - 1] != -1) {
                heroX -= 1;
                $(".hero").css("background", "url('source/" + "left.png" + "') no-repeat");
            }
        } else if (code == '39') {
            if ($("#hero").position().left + size / 2 <= $(window).width() && map[heroY][heroX + 1] != -1) {
                heroX += 1;
                $(".hero").css("background", "url('source/" + "right.png" + "') no-repeat");
            }
        } 

        if (xx == heroX && yy == heroY)
            return [false, false];

        inlastroom = inroom

        if (map[heroY][heroX] > 0)
            inroom = true;
        else
            inroom = false;

        room = map[heroY][heroX];
        map[heroY][heroX] = "x";

        $("#hero").animate({
            top: size * heroY + deltaY,
            left: size * heroX + deltaX
        }, SPEED);

        let x = size * heroX + deltaX < ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
            size * heroX + deltaX : ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)),

            y = size * heroY + 18 < ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
                size * heroY + 18 : ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2));

        $("#circle").animate({
            left: x,
            top: y
        }, SPEED);

        $("#circle2").animate({
            left: x,
            top: y
        }, SPEED);

       
        MOVES_5[2] = MOVES_5[1];
        MOVES_5[1] = MOVES_5[0];
        MOVES_5[0] = [xx, yy];

        return [true, !inlastroom && inroom];
    }

    function ck(e) {
        if (e.keyCode == '37' || e.keyCode == '38' || e.keyCode == '39' || e.keyCode == '40') {
            if (onkeypressUp) {
                onkeypressUp = false;
                onkeypressDown = true;
            }
        }
    }

    function heroMoveTo(x, y){
        $("#hero").offset({
            top: size * y + deltaY,
            left: size * x + deltaX
        })
        $("#circle").offset({
            top: size * y - 109,
            left: size * x + deltaX - 125
        })
        $("#circle2").offset({
            top: size * y - 109,
            left: size * x + deltaX - 125
        })

        map[heroY][heroX] = room;
        room = map[y][x];
        map[y][x] = "x";
        heroX = x;
        heroY = y;
    }

    function checkTorchs(){
        for (let i in lamps){
            for (let s = 0; s < SAND.length; s++){                
                if (Math.sqrt((SAND[s]["x"] - lamps[i][2]) * (SAND[s]["x"] - lamps[i][2]) + (SAND[s]["y"] - lamps[i][3]) * (SAND[s]["y"] - lamps[i][3])) <= 7) 
                    SAND[s]["div"].style.opacity = 1;
            }
            for (let s = 0; s < WICK.length; s++){                
                if (Math.sqrt((WICK[s]["x"] - lamps[i][2]) * (WICK[s]["x"] - lamps[i][2]) + (WICK[s]["y"] - lamps[i][3]) * (WICK[s]["y"] - lamps[i][3])) <= 7) 
                    WICK[s]["div"].style.opacity = 1;
            }
            for (let s = 0; s < POWRED.length; s++){                
                if (Math.sqrt((POWRED[s]["x"] - lamps[i][2]) * (POWRED[s]["x"] - lamps[i][2]) + (POWRED[s]["y"] - lamps[i][3]) * (POWRED[s]["y"] - lamps[i][3])) <= 7) {
                    POWRED[s]["div"].style.opacity = 1;
                    // console.log(POWRED[s]["div"]);
                }
            }
        }
    }

    function checkKey(e) {
        // console.log(e.keyCode);

        if(PENDING && e.keyCode == 27 && $("#content-explanation-input").text() == "")
            closeWindow();
        
        if(PENDING)
            return null;

        if(e.keyCode == 67){
            clearAll();
            return null;            
        }

        if(e.keyCode == 86){
            interfaceMoveOut();
            return null;            
        }        

        if (e.keyCode == '90') {            
            putTorch();
            return null;            

        } 
        
        if (e.keyCode == '88') {
            getTorch();  
            return null;         
        }

        if (e.keyCode == '32') {
            putTNT();  
            return null;         
        }

        if (e.keyCode == '8') {
            getTNT();  
            return null;         
        }

        if (e.keyCode == '66') {
            BANG();  
            return null;         
        }

        if (e.keyCode == '78') {
            UNBANG();  
            return null;         
        }

        if (e.keyCode == '188') {
            SPEED = 100;
            return null;         
        }

        if (e.keyCode == '190') {
            SPEED = 0;
            return null;         
        }

        
        // console.log($("#hero").position().left);
        if (e.keyCode == '38' && map[heroY - 1][heroX] == -1 || e.keyCode == '40' && map[heroY + 1][heroX] == -1 || e.keyCode == '37' && map[heroY][heroX - 1] == -1 ||  e.keyCode == '39' && map[heroY][heroX + 1] == -1 || heroX == 0 && e.keyCode == '37') {
            return null;
        } 


        // if (!onkeypressDown)
        //     return null;

        // else {
        //     onkeypressDown = false;
        //     onkeypressUp = true;
        // }

        e = e || window.event;
        map[heroY][heroX] = room;

        let isgone = true;
        if (e.keyCode == '37' || e.keyCode == '38' || e.keyCode == '39' || e.keyCode == '40') 
            isgone = move(e.keyCode);

        let behind = 0;
        let sandX = 0;
        let wickX = 0;
        let powredX = 0

        if (isgone[0]){
            
            for (let i = 0; i < VARRIORS_CURRENT.length; i++){

                behind = Math.sqrt((heroX - VARRIORS_CURRENT[i]["x"]) * (heroX - VARRIORS_CURRENT[i]["x"]) + (heroY - VARRIORS_CURRENT[i]["y"]) * (heroY - VARRIORS_CURRENT[i]["y"]));
                if (behind <= 5)
                    VARRIORS_CURRENT[i]["div"].style.opacity = (5 - behind) / 5
                else 
                    VARRIORS_CURRENT[i]["div"].style.opacity = 0;                

                if (behind <= 3){
                    attack(VARRIORS_CURRENT[i]);
                    break;
                }
            }

            for (let i = 0; i < SAND.length; i++){
                sandX = Math.sqrt((heroX - SAND[i]["x"]) * (heroX - SAND[i]["x"]) + (heroY - SAND[i]["y"]) * (heroY - SAND[i]["y"]));
                if (sandX <= 7)
                    SAND[i]["div"].style.opacity = (7 - sandX) / 7;
                else 
                    SAND[i]["div"].style.opacity = 0;
                
                    
                checkTorchs();

                if (sandX  == 0){
                    getResourse(SAND[i]);
                    break;
                }
            }

            for (let i = 0; i < WICK.length; i++){
                wickX = Math.sqrt((heroX - WICK[i]["x"]) * (heroX - WICK[i]["x"]) + (heroY - WICK[i]["y"]) * (heroY - WICK[i]["y"]));
                if (wickX <= 7)
                    WICK[i]["div"].style.opacity = (7 - wickX) / 7;
                else 
                    WICK[i]["div"].style.opacity = 0;

                checkTorchs();

                if (wickX  == 0){
                    getResourse(WICK[i]);
                    break;
                }
            }

            for (let i = 0; i < POWRED.length; i++){
                powredX = Math.sqrt((heroX - POWRED[i]["x"]) * (heroX - POWRED[i]["x"]) + (heroY - POWRED[i]["y"]) * (heroY - POWRED[i]["y"]));
                if (powredX <= 7)
                    POWRED[i]["div"].style.opacity = (7 - powredX) / 7;
                else 
                    POWRED[i]["div"].style.opacity = 0;

                checkTorchs();

                if (powredX  == 0){
                    getResourse(POWRED[i]);
                    break;
                }
            }

        }

        if (isgone[1]){
            if(room == 10)
                MOVE = [10];

            else if (room != 0 && MOVE.length > 1 && MOVE[MOVE.length - 2] == room){
                MOVE.pop(MOVE.length);
                // MOVE.pop(MOVE.length);
            }
            else if (room != 0 && (MOVE.length != 0 && MOVE[MOVE.length - 1] != room || MOVE.length == 0))
                MOVE.push(room);

            if (room in SHOWINFO && behind > 3 && sandX != 0 && wickX != 0 && powredX != 0)
                sayAbout();
        }     
    }

    function putTorch(){
        // console.log(room);
        if (room > 0 && !(room in lamps) && torchs > 0){
            torchs --;
            var lamp1 = $("#circle").clone(),
                lamp2 = $("#circle2").clone();

            lamp1.attr('id', "lamp_" + heroX + "_" + heroY);
            lamp2.attr('id', "lamp2_" + heroX + "_" + heroY);     
            
            lamp1.addClass("lamp1");
            lamp2.addClass("lamp2");

            lamp1.appendTo("body");
            lamp2.appendTo("body");
            lamp2.css("background", "url('source/lamp.png') no-repeat");

            lamps[room] = [lamp1, lamp2, heroX, heroY];
            $("#count-item-torch").text(torchs);
        }
    }

    function getTorch(){
        if (room in lamps){
            torchs ++;
            lamps[room][0].remove();
            lamps[room][1].remove();

            delete lamps[room];
            $("#count-item-torch").text(torchs);
        }
    }

    function sayAbout(){
        if (room != 0)
            eventInfo({
                "main": {
                    "head": "Вы вошли в комнату номер " + String(room) + ".", 
                    "main": ROOMS[room - 1],
                },
                "buttons": [{
                    "text": "Окей...",
                    "func": closeWindow
                },{
                    "text": "Больше не показывать",
                    "func": function (){
                        if (room in SHOWINFO)
                            delete SHOWINFO[room];
                        closeWindow();
                    }
                }]
            });
        else 
            eventInfo({
                "main": {
                    "head": "Вы находитесь в коридоре номер " + parseInt(Math.random() * 28 + 1) + ".", 
                    "main":"Выбирайтесь из этого междумирья, здесь стены искажают пространство. Как скоро они исказят и вас до неузнаваемости?..",
                },
                "buttons": [{
                    "text": "Окей...",
                    "func": closeWindow
                }]
            });
    }

    function clearAll(){
        if (SHOWINFO.length != 0){
            SHOWINFO = [];
            eventInfo({
                "main": {
                    "head": "XAXAXA",
                    "main":"БОЛЬШЕ ТЫ НИЧЕГО НЕ УЗНАЕШЬ, ГЛУПЕЦ-ГОЛУБЕЦ!",
                },
                "buttons": [{
                    "text": "Окей...",
                    "func": closeWindow
                }]
            });
        }
    }

    function takeXYbyRoom(room){
        let vars = [];
        for (let i = 0; i < map.length; i ++){
            for (let j = 0; j < map[0].length; j ++){
                if (map[i][j] == room){
                    vars.push([j, i]);
                }
            }    
        }
        let rand = parseInt(Math.random() * vars.length);

        return [vars[rand][0], vars[rand][1]];
    }

    function addVarrior(){
        if (VARRIORS_GLOBAL.length != 0) {
            let newroom = parseInt(Math.random() * 28 + 1);
            while (newroom in lamps || newroom == room ||  VARRIORS_IN.indexOf(newroom) != -1)
                newroom = parseInt(Math.random() * 28 + 1);
            
            VARRIORS_IN.push(newroom);

            let XY = takeXYbyRoom(newroom);

            let xVar = XY[0];
            let yVar = XY[1];

            let varrior = VARRIORS_GLOBAL.pop();
            varrior["room"] = newroom;
            varrior["x"] = xVar;
            varrior["y"] = yVar;

            let div = document.createElement("div");
            div.className = "varrior";
            div.style.left = xVar * size + "px";
            div.style.top = yVar * size + "px";
            div.style.height = size + "px";
            div.style.width = size + "px";
            div.id = "varrior" + newroom;
            
            
            varrior["div"] = div;

            $("#varriors").append(div);
            VARRIORS_CURRENT.push(varrior);
        }   
    }

    function addResourse(name, task, answer){
        let newroom = parseInt(Math.random() * 28 + 1);
        while (newroom == room || VARRIORS_IN.indexOf(newroom) != -1 || SAND_IN.indexOf(newroom) != -1 || WICK_IN.indexOf(newroom) != -1 || POWRED_IN.indexOf(newroom) != -1)
            newroom = parseInt(Math.random() * 28 + 1);

        let XY = takeXYbyRoom(newroom);

        let xVar = XY[0];
        let yVar = XY[1];

        let resourse = {
            "name":name,
            "task": task,
            "answer": answer,
            "prize":{
                "sand":0,
                "powred":0,
                "wick":0,
                "tnt":0},
            "x":xVar,
            "y":yVar,
            "div":"",
            "room":newroom
        };

        let div = document.createElement("div");
        div.className = name;
        div.style.left = xVar * size + "px";
        div.style.top = yVar * size + "px";
        div.style.height = size + "px";
        div.style.width = size + "px";
        div.id = name + newroom;
        resourse["div"] = div;

        if (name == "sand"){
            resourse["prize"]["sand"] = 1;
            $("#sands").append(div);
            SAND.push(resourse);
            SAND_IN.push(newroom);
        }
        else if (name == "wick"){
            resourse["prize"]["wick"] = 1;
            $("#wicks").append(div);
            WICK.push(resourse);
            WICK_IN.push(newroom);
        }
        else if (name == "powred"){
            resourse["prize"]["powred"] = 1;
            $("#powreds").append(div);
            POWRED.push(resourse);
            POWRED_IN.push(newroom);
        }

        // console.log(SAND_IN);
        // console.log(WICK_IN);
        // console.log(POWRED_IN);
    }

    function resetTimer(timer){
        clearInterval(timer);
        TIME_TO_KILL = 60;
    }

    function endThisVar(message, x, y, timer, kill){
        heroMoveTo(x, y);

        countTrys = 5;

        let P = document.createElement("P");
        P.textContent = message;

        if (timer == null)
            $("#content-explanation-get").append(P);
        else 
            $("#content-explanation-input").append(P);

        $(".interface-button-action").attr("disabled", true);
        resetTimer(timer);
        clearTimeout(kill);
        setTimeout(() => {                 
            closeWindow();
            $(".interface-button-action").attr("disabled", false);
        }, 1000);
    }

    function attack(varrior){
        let timer = setInterval(() => {
            TIME_TO_KILL --;
            $("#maintext").text(MONSTER_ATTACK + " (до смерти < " + TIME_TO_KILL + " секунд)");
        }, 1000);

        let KILL = setTimeout(() => {
                        
            for (let i in lamps) {
                lamps[i][0].remove();
                lamps[i][1].remove();
            }
            torchs = 5;
            lamps = {};
            // delete lamps[room];
            $("#count-item-torch").text(torchs);
            MOVE = [];
                    
            endThisVar("Ты УМЕР!", heroStartX, heroStartY, timer, KILL);
            updateInventory(varrior["prize"],"inverted");

        }, TIME_TO_KILL * 1000);

        
        eventInput({
            "main": {
                "head": MONSTER_ATTACK,
                "main": varrior["task"],
            },
            "buttons": [{
                "text": "Умри, монстр!",
                "func": function() {
                        if (countTrys > 0){
                            if ($("#text").val() == varrior["answer"]){
                                VARRIORS_CURRENT.splice(VARRIORS_CURRENT.indexOf(varrior), 1);
                                VARRIORS_IN.splice(VARRIORS_IN.indexOf(varrior["room"]), 1)
                                addVarrior();
                                varrior["div"].remove();
                                
                                endThisVar("Ты ПОБЕДИЛ!", heroX, heroY, timer, KILL)
                                updateInventory(varrior["prize"],"direct");

                                console.log(VARRIORS_CURRENT);
                            }
                            else {
                                countTrys --;
                                let P = document.createElement("P");
                                if (countTrys != 0)
                                    P.textContent = "Неверно! Пытайся ещё " + countTrys + " раз!";
                                else 
                                    P.textContent = "Ты умрёшь.";
                                $("#content-explanation-input").append(P);
                            }
                        }
                    }
                },
                {
                    "text": "Убегай!",
                    "func": function(){
                        if (MOVE.join(" ") == $("#text2").val()){

                            endThisVar("Ты СБЕЖАЛ!", MOVES_5[MOVES_5.length - 1][0], MOVES_5[MOVES_5.length - 1][1], timer, KILL);

                            MOVES_5 = [[heroX, heroY], [heroX, heroY], [heroX, heroY]];                           
                        }
                        else {
                            $("#GO").text(["Пробуй ещё...", "Да не там ты шёл!", "Ты опять не прав. Снова, да.", "В такси бы тебя убили. Нет.", "Путь не верный.", "...there is not correct way, try again..."][parseInt(Math.random() * 6)]);

                        }                            
                    }                  
                }]
        });  
    }

    function updateInventory(from, direction){
        if (direction == "direct"){
            // console.log("add");
            // console.log("sand - (from) " + INVENTORY["sand"] + " - (to) " + from["sand"]);
            // console.log("wick - (from) " + INVENTORY["wick"] + " - (to) " + from["wick"]);
            // console.log("powred - (from) " + INVENTORY["powred"] + " - (to) " + from["powred"]);            

            INVENTORY["sand"] += from["sand"];
            INVENTORY["wick"] += from["wick"];
            INVENTORY["powred"] += from["powred"];
            TNT += from["tnt"];
            
        }
        else if (direction == "inverted"){
            // console.log("remove");
            // console.log("sand - (from) " + from["sand"] + " - (to) " + INVENTORY["sand"]);
            // console.log("wick - (from) " + from["wick"] + " - (to) " + INVENTORY["wick"]);
            // console.log("powred - (from) " + from["powred"] + " - (to) " + INVENTORY["powred"]);

            from["sand"] += INVENTORY["sand"]
            from["wick"] += INVENTORY["wick"];
            from["powred"] += INVENTORY["powred"];
            from["tnt"] += TNT;
            INVENTORY["sand"] = 0;
            INVENTORY["wick"] = 0;
            INVENTORY["powred"] = 0;
            TNT = 0;
        }

        $("#count-item-sand").text(INVENTORY["sand"]);
        $("#count-item-wick").text(INVENTORY["wick"]);
        $("#count-item-powred").text(INVENTORY["powred"]);        
        $("#count-item-tnt").text(TNT);        
        
    }

    function getResourse(resourse){
        // console.log(resourse["name"]);
        eventGet({
                "main": {
                    "head": "Шахта по добыче " + (resourse["name"] == "sand" ? "ПЕСКА!" : (resourse["name"] == "wick" ? "НИТЕЙ!" : "ПОРОХА!")), 
                    "main": resourse["task"],
                },
                "buttons": [{
                    "text": "Добыть!",
                    "func": function(){
                        // console.log(resourse["answer"]);
                        if(resourse["answer"] == $("#text_get").val()){
                            updateInventory(resourse["prize"], "direct");
                            if (resourse["name"] == "sand"){
                                SAND.splice(SAND.indexOf(resourse), 1);
                                SAND_IN.splice(SAND_IN.indexOf(resourse["room"]), 1);                                
                            }
                            else if (resourse["name"] == "wick"){
                                WICK.splice(WICK.indexOf(resourse), 1);
                                WICK_IN.splice(WICK_IN.indexOf(resourse["room"]), 1);
                            }
                            else {
                                POWRED.splice(POWRED.indexOf(resourse), 1);
                                POWRED_IN.splice(POWRED_IN.indexOf(resourse["room"]), 1);
                            } 
                            resourse["div"].remove();
                            endThisVar("Ресурс получен!", heroX, heroY, null, null);
                        }
                        else {
                            $("#button_get").text(["У тебя ошибка в рассчётах.", "Отвечаю! У тебя ошибка в рассчётах!", "Ты опять не прав. Снова, да.", "Это не тот ответ", "Будь ты учёным, тебя бы сожгли.", "...there is not correct answer, try again..."][parseInt(Math.random() * 6)]);
                        }
                    }
                }]
            });
    }

    function craftTNT(){
        if (INVENTORY["sand"] > 0 && INVENTORY["wick"] > 0 && INVENTORY["powred"] > 0){
            INVENTORY["sand"] --;
            INVENTORY["wick"] --;
            INVENTORY["powred"] --;

            TNT ++;
            $("#count-item-tnt").text(TNT);
            $("#count-item-sand").text(INVENTORY["sand"]);
            $("#count-item-wick").text(INVENTORY["wick"]);
            $("#count-item-powred").text(INVENTORY["powred"]);
        }
    }

    function putTNT(){
        if(TNT > 0 && room > 0 && (!(room in TNTS) && ROOMS_WITH_TNT > 0 || room in TNTS)){
            for (let i in TNTS){
                for (let j = 0; j < TNTS[i].length; j++)
                    if (TNTS[i][j][1] == heroX && TNTS[i][j][2] == heroY)
                        return null;
            }

            TNT --;

            let div = document.createElement("div");
            div.className = "tnt";
            div.style.left = heroX * size + "px";
            div.style.top = heroY * size + "px";
            div.style.height = size + "px";
            div.style.width = size + "px";
            div.id = "tnt_" + heroX + "_" + heroY;
            $("#tnts").append(div);


            if (room in TNTS){
                TNTS[room].push([div, heroX, heroY]);
            }
            else {
                ROOMS_WITH_TNT --;
                TNTS[room] = [[div, heroX, heroY]];
            }

            // $("#count-item-room").text(ROOMS_WITH_TNT);
            $("#count-item-tnt").text(TNT);
            
        }
    }

    function getTNT(){
        if (room in TNTS){
            TNT ++;
            TNTS[room][TNTS[room].length - 1][0].remove();

            if (TNTS[room].length == 1){
                delete TNTS[room];
                ROOMS_WITH_TNT ++;
            }
                
            else
            TNTS[room].splice(TNTS[room].length - 1, 1);

            // $("#count-item-room").text(ROOMS_WITH_TNT);
            $("#count-item-tnt").text(TNT);
        }
    }    

    function BANG(){
        let tnts = []
        for (let i in TNTS){
            for (let j = 0; j < TNTS[i].length; j++){
                // TNTS[i][j].push(i);
                tnts.push(TNTS[i][j]);
            }
        }

        if (tnts.length == 0 || BOOM != null)
            return null;

        CURRENT_TIME_TO_GONE = TIME_TO_GONE;
        let x = 0;
        prepare = setInterval(() => {
            for (let i = 0; i < tnts.length; i++){
                if (Math.random() >= 0.5){
                    tnts[i][0].style.backgroundColor = "red";
                }
                else {
                    tnts[i][0].style.backgroundColor = "white";
                }
            }
            if (x == 0){
                CURRENT_TIME_TO_GONE --;
                x = 1;
            }
            else {
                x = 0;
            }
            
        }, 500);

        BOOM = setTimeout(() => {
            clearInterval(prepare);
            tnts = 0
            for (let i in TNTS){
                tnts += TNTS[i].length;
            }
            if (tnts != 0)
                destroyAll();

        }, TIME_TO_GONE * 1000);
    }

    function destroyAll(){
        console.log("Конец");

        let result = 0;

        for (let i in TNTS)
            result += TNTS[i].length * ROOM_MEAN[i];

        if (room != -10)
            result -= 10;

        if (localStorage.result == "null")
            localStorage.result = result;

        document.getElementById("videoPlayer").style.zIndex = "200";
        $("#videoPlayer").animate({opacity:'1'},700);
        document.getElementById("videoPlayer").play();
        setTimeout(()=>{        
            $("#videoPlayer").animate({opacity:'0'},700);
            setTimeout(()=>{
                for (let i in TNTS){
                    for (let j = 0; j < TNTS[i].length; j++){
                        TNTS[i][j][0].remove();
                    }
                }       
                TNTS = {};
                document.getElementById("videoPlayer").style.zIndex = "-1";
                window.open('result.html');
            }, 700);
        }, 13000);
    }

    function UNBANG(){
        if (typeof(BOOM) != "undefined" && BOOM !== null){
            clearTimeout(BOOM);
            BOOM = null;
        }
        if (typeof(prepare) != "undefined" && prepare !== null){
            clearInterval(prepare);
            prepare = null;
        }        
    }

    var heroX = 1,
    heroY = 21,
    heroStartX = 1,
    heroStartY = 21,
    size = $(window).width() / 108,
    deltaX = size / 4,
    deltaY = size / 2 - size * 2,
    room = -10,
    inroom = false,
    onkeypressUp = false,
    onkeypressDown = true,
    lamps = {},
    torchs = 5,
    PENDING = false,
    whatnow = "",
    VARRIORS_GLOBAL = [],
    VARRIORS_CURRENT = [],
    MOVE = [],
    SHOWINFO = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28],
    VARRIORS_IN = [],
    countTrys = 5,
    MOVES_5 = [[heroX, heroY], [heroX, heroY], [heroX, heroY]],
    TIME_TO_GONE = 10,
    CURRENT_TIME_TO_GONE = 0;
    BOOM = null,
    prepare = null,
    SPEED = 100;

    ROOMS = ["1. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "2. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "3. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "4. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "5. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "6. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "7. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "8. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "9. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "10. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "11. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "12. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "13. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "14. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "15. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "16. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "17. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "18. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "19. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "20. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "21. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "22. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "23. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "24. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "25. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "26. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "27. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
    "28. Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae."],
    
    TNTS = {};

    ROOMS_WITH_TNT = 28;

    MONSTER_ATTACK = "МОНСТР АТАКУЕТ ТЕБЯ",
    TIME_TO_KILL = 60,
    
    INVENTORY = {
        "sand":0,
        "powred":0,
        "wick":0
    },

    ROOM_MEAN = {
        1:4,
        2:5,
        3:4,
        4:4,
        5:6,
        6:5,
        7:4,
        8:5,
        9:6,
        10:5,
        11:6,
        12:5,
        13:6,
        14:5,
        15:4,
        16:4,
        17:7,
        18:3,
        19:2,
        20:3,
        21:1,
        22:2,
        23:3,
        24:3,
        25:4,
        26:5,			
        27:7,
        28:2
    },
    
    SAND = [],
    WICK = [],
    POWRED = [],
    SAND_IN = [],
    WICK_IN = [],
    POWRED_IN = [],
    
    TNT = 10,
    RESULT = 555;

    //Скрытие pop-container при клике за область экрана.
    $("#pop-container-info").bind("click", function (e) {
        if ($(e.target).attr("id") == "pop-container-info")
            closeWindow();
    })

    $("#pop-container-get").bind("click", function (e) {
        if ($(e.target).attr("id") == "pop-container-get")
            closeWindow();
    })

    // $("#pop-container-input").bind("click", function (e) {
    //     if ($(e.target).attr("id") == "pop-container-input")
    //         closeWindow();
    // })

    $("#button-interface").click(
        function () {
            interfaceMoveOut();
        }
    );

    $("#button-interface2").click(
        function () {
            interfaceMoveOut2();
        }
    );



    //Скрытие pop-container при клике на крестик.
    $(".popup-container-close").click(() => {        
        closeWindow();
    })
    

    heroMoveTo(heroX, heroY);
    document.onkeydown = checkKey;
    document.onkeyup = ck;

    
    $("#putTorch").click(putTorch);
    $("#getTorch").click(getTorch);
    
    $("#sayAbout").click(sayAbout);

    $("#clearAll").click(clearAll);

    $("#craftTNT").click(craftTNT);

    $("#getTNT").click(getTNT);

    $("#putTNT").click(putTNT);
    
    $("#BANG").click(BANG);
    $("#UNBANG").click(UNBANG);

    $("#count-item-torch").text(torchs);
    $("#count-item-tnt").text(TNT);


//#region VARRIORS init

VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":1,
        "powred":0,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":0,
        "powred":1,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":0,
        "powred":0,
        "wick":1,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":1,
        "powred":0,
        "wick":1,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":0,
        "powred":1,
        "wick":1,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":1,
        "powred":1,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":0,
        "powred":0,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":1,
        "powred":1,
        "wick":1,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":0,
        "powred":1,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});
VARRIORS_GLOBAL.push(
    {"task":"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem aliquam facilis praesentium quibusdam rerum ipsa distinctio facere sit optio obcaecati.",
    "answer":"1",
    "prize": {
        "sand":2,
        "powred":0,
        "wick":0,
        "tnt":0},
    "x": -1,
    "y": -1,
    "div":"",
    "room":0});


//#endregion   

//#region RESOURSE init 
    addResourse("sand", "1. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "2. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "3. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "4. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "5. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "6. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("sand", "7. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    
    addResourse("wick", "11. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "12. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "13. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "14. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "15. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "16. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("wick", "17. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    
    addResourse("powred", "21. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "22. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "23. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "24. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "25. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "26. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    addResourse("powred", "27. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, sapiente.", 2);
    
//#endregion
    
    for (let i in [1, 1, 1, 1, 1])
        addVarrior();

    map[22][0] = -10;
    map[22][1] = -10;
    map[22][2] = -10;
    map[22][3] = -10;
    map[22][4] = -10;

    map[21][0] = -10;
    map[21][1] = -10;
    map[21][2] = -10;
    map[21][3] = -10;
    map[21][4] = -10;
    
    map[20][0] = -10;
    map[20][1] = -10;
    map[20][2] = -10;
    map[20][3] = -10;
    map[20][4] = -10;

    
    
    localStorage.result = "null";

// console.log(VARRIORS_CURRENT)        
});


