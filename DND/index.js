$(document).ready(function () {
    window.defaultWidth = window.innerWidth;
    window.onresize = function () {

        let x = (window.defaultWidth / window.innerWidth).toFixed(2);
        document.getElementById("circle2").style.transform = "scale(" + 1 / x + ")"

        $("#circle").height(250 / x)
        $("#circle").width(250 / x)
        $("#circle").css({marginTop: -125 / x, marginLeft: -125 / x})
    }

    $("#button-interface").click(
        function (e) {
            interfaceMoveOut(e);
        }
    );

    function interfaceMoveOut(event) {
        let interfase = $("#interface"),
            flag = interfase.css("display") == "none" ? false : true;
        if (flag) {
            interfase.hide(1000);
            $("#button-interface").animate({
                left: "6%",
                top: "2%"
            })
        } else {
            interfase.show("slow");
            interfase.css("display", "flex");
            $("#button-interface").animate({
                left: "1.5%",
                top: "1.5%"
            });
        }
    }

    //Скрытие pop-container при клике за область экрана.
    $("#pop-container").bind("click", function (e) {
        if ($(e.target).attr("id") == "pop-container")
            $("#pop-container").hide(750);
    })

    //Скрытие pop-container при клике на крестик.
    $(".popup-container-close").click(() => {
        $("#pop-container").hide(750);
    })

    /**
     * Метод позволяет вызвать popup слой с задаными настройками.
     * @param {Object} options - словарь хранящий настройки.
     * Example:
     * options: {
     *     "main": {
     *         "text": "Scenario is amazing!"
     *     }
     *     "buttons": [{
     *          "text": "Do it!"
     *          "function": function();
     *     }],
     * }
     */
    function eventOnDisplay(options) {
        let content = $("#content-explanation"),
            actions = $("#content-actions");

        if ("main" in options && "text" in options["main"]) {
            content.text(options["main"]["text"]);
        }
        if ("buttons" in options) {
            for (let elem of options["buttons"]) {
                let button = document.createElement("button");
                button.textContent = elem["text"];
                button.className = "interface-button-action";
                button.onclick = elem["func"];
                actions.append(button);
            }
        }

        $("#pop-container").show(750);
        onkeypressDown = false;
    }
    //Пример работы. Можно удалить.
    // eventOnDisplay({
    //     "main": {
    //         "text": "LOL"
    //     },
    //     "buttons": [{
    //         "text": "123",
    //         "func": function () {
    //             alert('LOL');
    //         }
    //     }, {
    //         "text": "321",
    //         "func": function () {
    //             alert('adsadadad');
    //         }
    //     }]
    // });


//#region map
    var map

//#endregion

    var heroX = 1,
        heroY = 21,
        size = $(window).width() / 108,
        deltaX = size / 4,
        deltaY = size / 2 - size * 2,
        room = -1,
        inroom = false,
        onkeypressUp = false,
        onkeypressDown = true,
        lamps = {};

    $("#hero").offset({
        top: size * heroY + deltaY,
        left: size * heroX + deltaX
    })
    $("#circle").offset({
        top: size * heroY - 109,
        left: size * heroX + deltaX - 125
    })
    $("#circle2").offset({
        top: size * heroY - 109,
        left: size * heroX + deltaX - 125
    })
    room = map[heroY][heroX];
    map[heroY][heroX] = "x";

    document.onkeydown = checkKey;
    document.onkeyup = ck;

    function ck(e) {
        if (e.keyCode == '37' || e.keyCode == '38' || e.keyCode == '39' || e.keyCode == '40') {
            if (onkeypressUp) {
                onkeypressUp = false;
                onkeypressDown = true;
            }
        }
    }

    function checkKey(e) {
        if (!onkeypressDown)
            return null;

        else {
            onkeypressDown = false;
            onkeypressUp = true;
        }

        e = e || window.event;
        map[heroY][heroX] = room;

        if (e.keyCode == '38') {
            if ($("#hero").position().top >= 0 && map[heroY - 1][heroX] != -1) {
                heroY -= 1;
                $(".hero").css("background", "url('source/" + "back.png" + "') no-repeat");
            }
        } else if (e.keyCode == '40') {
            if ($("#hero").position().top <= $(window).height() && map[heroY + 1][heroX] != -1) {
                heroY += 1;
                $(".hero").css("background", "url('source/" + "front.png" + "') no-repeat");
            }
        } else if (e.keyCode == '37') {
            if ($("#hero").position().left - size / 2 >= 0 && map[heroY][heroX - 1] != -1) {
                heroX -= 1;
                $(".hero").css("background", "url('source/" + "left.png" + "') no-repeat");
            }
        } else if (e.keyCode == '39') {
            if ($("#hero").position().left + size / 2 <= $(window).width() && map[heroY][heroX + 1] != -1) {
                heroX += 1;
                $(".hero").css("background", "url('source/" + "right.png" + "') no-repeat");
            }
        } else if (e.keyCode == '90' && map[heroY][heroX] != 0 && !(map[heroY][heroX] in lamps)) {
            var lamp1 = $("#circle").clone(),
                lamp2 = $("#circle2").clone();
            lamp1.appendTo("body");
            lamp2.appendTo("body");
            lamp2.css("background", "url('source/lamp.png') no-repeat");

            lamps[map[heroY][heroX]] = [lamp1, lamp2];

        } else if (e.keyCode == '88' && map[heroY][heroX] in lamps) {
            lamps[map[heroY][heroX]][0].remove();
            lamps[map[heroY][heroX]][1].remove();

            delete lamps[map[heroY][heroX]];
        }


        if (map[heroY][heroX] > 0)
            inroom = true;
        else
            inroom = false;

        room = map[heroY][heroX];
        map[heroY][heroX] = "x";

        $("#hero").animate({
            top: size * heroY + deltaY,
            left: size * heroX + deltaX
        }, 100);

        let x = size * heroX + deltaX < ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
            size * heroX + deltaX : ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)),

            y = size * heroY + 18 < ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
                size * heroY + 18 : ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2));

        $("#circle").animate({
            left: x,
            top: y
        }, 100);

        $("#circle2").animate({
            left: x,
            top: y
        }, 100);
    }
})
;


