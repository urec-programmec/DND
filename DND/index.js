$(document).ready(function () {
    window.defaultWidth = window.innerWidth;
    window.onresize = function () {

        let x = (window.defaultWidth / window.innerWidth).toFixed(2);
        document.getElementById("circle2").style.transform = "scale(" + 1 / x + ")"

        $("#circle").height(250 / x)
        $("#circle").width(250 / x)
        $("#circle").css({marginTop: -125 / x, marginLeft: -125 / x})
    }

    $("#button-interface").click(
        function (e) {
            interfaceMoveOut(e);
        }
    );

    function interfaceMoveOut(event) {
        let interfase = $("#interface"),
            flag = interfase.css("display") == "none" ? false : true;
        if (flag) {
            interfase.hide(1000);
            $("#button-interface").animate({
                left: "6%",
                top: "2%"
            })
        } else {
            interfase.show("slow");
            interfase.css("display", "flex");
            $("#button-interface").animate({
                left: "1.5%",
                top: "1.5%"
            });
        }
    }

    //Скрытие pop-container при клике за область экрана.
    $("#pop-container-info").bind("click", function (e) {
        if ($(e.target).attr("id") == "pop-container-info")
            closeWindow();
    })

    $("#pop-container-input").bind("click", function (e) {
        if ($(e.target).attr("id") == "pop-container-input")
            closeWindow();
    })

    //Скрытие pop-container при клике на крестик.
    $(".popup-container-close").click(() => {        
        closeWindow();
    })

    function closeWindow(){
        PENDING = false;
        what = "info";
        // console.log($("#content-explanation-info"));
        if ($("#content-explanation-info").text() == "")
            what = "input";        

        if (what == "info"){
            $("#pop-container-info").hide(750);
            $("#content-explanation-info").html("");
            $("#content-actions-info").html("");
        }
        else {
            $("#pop-container-input").hide(750);
            $("#content-explanation-input").html("");
            $("#content-actions-input").html("");
        }
    }

    function eventInfo(options){
        PENDING = true;
        let content = $("#content-explanation-info"),
            actions = $("#content-actions-info");

        if ("main" in options && "head" in options["main"] && "main" in options["main"]) {
            let P = document.createElement("P");
            // P.className = "class_for_text";
            P.textContent = options["main"]["head"];
            content.append(P);
            P = document.createElement("P");
            // P.className = "class_for_text";
            P.textContent = options["main"]["main"];
            content.append(P);
            
            // content.text(options["main"]["text"]);
        }
        if ("buttons" in options) {
            for (let elem of options["buttons"]) {
                let button = document.createElement("button");
                button.textContent = elem["text"];
                button.className = "interface-button-action";
                button.onclick = elem["func"];
                actions.append(button);
            }
        }
        $("#pop-container-info").show(750);
        // onkeypressDown = false;
    }

    function eventInput(options){
        PENDING = true;
        let content = $("#content-explanation-input"),
            actions = $("#content-actions-input");

        if ("main" in options && "text" in options["main"]) {
            content.text(options["main"]["text"]);
        }
        if ("buttons" in options) {
            for (let elem of options["buttons"]) {
                let button = document.createElement("button");
                button.textContent = elem["text"];
                button.className = "interface-button-action";
                button.onclick = elem["func"];
                actions.append(button);
            }
        }
        if ("text" in options) {

        }

        $("#pop-container-input").show(750);
        // onkeypressDown = false;
    }

//#region map
    var map

//#endregion

    // враг подошёл -> 2 кнопки - сбежать и убить
    // храним массив путей
    // храним общий массив мобов (без х, у) и текущий {
    // х, у, задача, ответ чтобы убить, награда за убийство
    // }
    // мут - лишение факелов, перенос в начало, отбирание всего инвентаря 

    
    // мы подошли к ресурсу -> 1 поле и 1 кнопка - ввод и проверить
    // храним массив ресурсов {
    // x, y, что даёт, задача, правильный ответ, решено или нет
    // }
    // 

    // мы подошли к точке получения информации -> 
    // получить информацию о лабиринте, телепортироваться
    // храним массив точек {
    // х, у, куда телепортируется, информация, правильный ответ
    // }

    var heroX = 1,
        heroY = 21,
        size = $(window).width() / 108,
        deltaX = size / 4,
        deltaY = size / 2 - size * 2,
        room = -1,
        inroom = false,
        onkeypressUp = false,
        onkeypressDown = true,
        lamps = {},
        torchs = 5,
        PENDING = false,
        VARRIORS = [],
        MOVE = [],
        SHOWINFO = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28];

    $("#hero").offset({
        top: size * heroY + deltaY,
        left: size * heroX + deltaX
    })
    $("#circle").offset({
        top: size * heroY - 109,
        left: size * heroX + deltaX - 125
    })
    $("#circle2").offset({
        top: size * heroY - 109,
        left: size * heroX + deltaX - 125
    })
    room = map[heroY][heroX];
    map[heroY][heroX] = "x";

    document.onkeydown = checkKey;
    document.onkeyup = ck;

    function move(code){
        let xx = heroX;
        let yy = heroY;

        if (code == '38') {
            if ($("#hero").position().top >= 0 && map[heroY - 1][heroX] != -1) {
                heroY -= 1;
                $(".hero").css("background", "url('source/" + "back.png" + "') no-repeat");
            }
        } else if (code == '40') {
            if ($("#hero").position().top <= $(window).height() && map[heroY + 1][heroX] != -1) {
                heroY += 1;
                $(".hero").css("background", "url('source/" + "front.png" + "') no-repeat");
            }
        } else if (code == '37') {
            if ($("#hero").position().left - size / 2 >= 0 && map[heroY][heroX - 1] != -1) {
                heroX -= 1;
                $(".hero").css("background", "url('source/" + "left.png" + "') no-repeat");
            }
        } else if (code == '39') {
            if ($("#hero").position().left + size / 2 <= $(window).width() && map[heroY][heroX + 1] != -1) {
                heroX += 1;
                $(".hero").css("background", "url('source/" + "right.png" + "') no-repeat");
            }
        } 

        if (xx == heroX && yy == heroY)
            return [false, false];

        inlastroom = inroom

        if (map[heroY][heroX] > 0)
            inroom = true;
        else
            inroom = false;

        room = map[heroY][heroX];
        map[heroY][heroX] = "x";

        $("#hero").animate({
            top: size * heroY + deltaY,
            left: size * heroX + deltaX
        }, 100);

        let x = size * heroX + deltaX < ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
            size * heroX + deltaX : ($(window).width() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)),

            y = size * heroY + 18 < ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2)) ?
                size * heroY + 18 : ($(window).height() - 125 / (window.defaultWidth / window.innerWidth).toFixed(2));

        $("#circle").animate({
            left: x,
            top: y
        }, 100);

        $("#circle2").animate({
            left: x,
            top: y
        }, 100);

        return [true, !inlastroom && inroom];
    }

    function ck(e) {
        if (e.keyCode == '37' || e.keyCode == '38' || e.keyCode == '39' || e.keyCode == '40') {
            if (onkeypressUp) {
                onkeypressUp = false;
                onkeypressDown = true;
            }
        }
    }

    function checkKey(e) {
        // console.log(e.keyCode);
        if(PENDING && e.keyCode == 27)
            closeWindow();

        if(PENDING)
            return null;

        if (e.keyCode == '90') {            
            putTorch();
            return null;            

        } else if (e.keyCode == '88') {
            getTorch();  
            return null;         
        }


        if (!onkeypressDown)
            return null;

        else {
            onkeypressDown = false;
            onkeypressUp = true;
        }

        e = e || window.event;
        map[heroY][heroX] = room;

        let isgone = true;
        if (e.keyCode == '37' || e.keyCode == '38' || e.keyCode == '39' || e.keyCode == '40') 
            isgone = move(e.keyCode);

        if (isgone[1]){
            if(room == 10)
                MOVE = [10];

            else if (room != 0 && MOVE.length > 1 && MOVE[MOVE.length - 2] == room){
                MOVE.pop(MOVE.length);
                // MOVE.pop(MOVE.length);
            }
            else if (room != 0 && (MOVE.length != 0 && MOVE[MOVE.length - 1] != room || MOVE.length == 0))
                MOVE.push(room);

            if (room in SHOWINFO)
                sayAbout();
        }

    function putTorch(){
        if (room != 0 && !(room in lamps) && torchs > 0){
            torchs --;
            var lamp1 = $("#circle").clone(),
                lamp2 = $("#circle2").clone();
            lamp1.appendTo("body");
            lamp2.appendTo("body");
            lamp2.css("background", "url('source/lamp.png') no-repeat");

            lamps[room] = [lamp1, lamp2];
            $("#count-item-torch").text(torchs);
        }
    }

    function getTorch(){
        if (room in lamps){
            torchs ++;
            lamps[room][0].remove();
            lamps[room][1].remove();

            delete lamps[room];
            $("#count-item-torch").text(torchs);
        }
    }

    function sayAbout(){
        if (room != 0)
            eventInfo({
                "main": {
                    "head": "Вы вошли в комнату номер " + String(room) + ".", 
                    "main":"Будьте начеку... Lorem ipsum dolor sit amet consectetur, adipisicing elit. Officia, molestiae.",
                },
                "buttons": [{
                    "text": "Окей...",
                    "func": closeWindow
                },{
                    "text": "Больше не показывать",
                    "func": function (){
                        if (room in SHOWINFO)
                            delete SHOWINFO[room];
                        closeWindow();
                    }
                }]
            });
        else 
            eventInfo({
                "main": {
                    "head": "Вы находитесь в коридоре номер " + parseInt(Math.random() * 28 + 1) + ".", 
                    "main":"Выбирайтесь из этого междумирья, здесь стены искажают пространство. Как скоро они исказят и вас до неузнаваемости?..",
                },
                "buttons": [{
                    "text": "Окей...",
                    "func": closeWindow
                }]
            });
    }

    $("#putTorch").click(putTorch);
    $("#getTorch").click(getTorch);
    
    $("#sayAbout").click(sayAbout);
    

    $("#count-item-torch").text(torchs);
});


